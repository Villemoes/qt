From 4c8d9165e614f435f0b21f8342a064971b2a1d8a Mon Sep 17 00:00:00 2001
From: James Ketrenos <jketreno@linux.intel.com>
Date: Tue, 4 Jan 2011 15:33:08 -0800
Subject: [PATCH] Added scaling based on screen size

Signed-off-by: James Ketrenos <jketreno@linux.intel.com>
---
 src/gui/kernel/qapplication_x11.cpp |   12 +++++++++++-
 1 files changed, 11 insertions(+), 1 deletions(-)

Index: qt-everywhere-opensource-src-4.8.0/src/gui/kernel/qapplication_x11.cpp
===================================================================
--- qt-everywhere-opensource-src-4.8.0.orig/src/gui/kernel/qapplication_x11.cpp
+++ qt-everywhere-opensource-src-4.8.0/src/gui/kernel/qapplication_x11.cpp
@@ -5101,6 +5101,12 @@ static Qt::MouseButtons translateXI2Mous
 bool QETWidget::translateXI2Event(const XIEvent *xievent)
 {
     Q_D(QWidget);
+    static int width = 0;
+    static int height = 0;
+    if (width == 0 || height == 0) {
+        width = DisplayWidth(X11->display, 0);
+        height = DisplayHeight(X11->display, 0);
+    }
 
     if (xievent->evtype == XI_Motion) {
         XIDeviceEvent *motionevent = (XIDeviceEvent *) xievent;
@@ -5248,6 +5254,7 @@ bool QETWidget::translateXI2Event(const
                 touchPoints << QTouchEvent::TouchPoint(i);
         }
         qreal x, y, nx, ny, w = 0.0, h = 0.0, p = -1.0;
+        x = y = nx = ny = 0.0;
         int id;
         uint active = 0;
         for (int i = 0; i < X11->xideviceinfo->num_classes; ++i) {
@@ -5290,7 +5297,10 @@ bool QETWidget::translateXI2Event(const
                         newstate |= Qt::TouchPointPrimary;
 
                     touchPoint.setState(newstate);
-                    touchPoint.setScreenRect(QRectF(x - w/2, y - h/2, w, h));
+                    if (w != 0.0 && h != 0.0)
+                        touchPoint.setScreenRect(QRectF((nx * width) - w/2, (ny * height) - h/2, w, h));
+                    else
+                        touchPoint.setScreenPos(QPoint(nx * width, ny * height));
                     touchPoint.setNormalizedPos(QPointF(nx, ny));
                     touchPoint.setPressure(p);
                 }
